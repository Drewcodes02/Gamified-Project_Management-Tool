<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Details | Gamified Project Management Tool</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <h2 class="mt-5">Task Details</h2>
                <div id="taskDetails" class="card my-3">
                    <!-- Task details will be dynamically populated here -->
                    <div class="card-body">
                        <h5 class="card-title" id="taskTitle">Task Title</h5>
                        <p class="card-text" id="taskDescription">Task Description</p>
                        <p class="card-text"><small class="text-muted" id="taskDeadline">Deadline</small></p>
                        <p class="card-text" id="taskAssignee">Assignee</p>
                        <p class="card-text" id="taskTimeSpent">Time Spent: <span id="timeSpent">0</span> hours</p>
                    </div>
                </div>
                <button class="btn btn-primary" id="updateTaskButton" data-toggle="modal" data-target="#updateTaskModal">Update Task</button>
                <button class="btn btn-danger" id="deleteTaskButton">Delete Task</button>
            </div>
        </div>
    </div>

    <!-- Update Task Modal -->
    <div class="modal fade" id="updateTaskModal" tabindex="-1" aria-labelledby="updateTaskModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateTaskModalLabel">Update Task</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="updateTaskForm">
                        <div class="form-group">
                            <label for="title">Title</label>
                            <input type="text" id="title" name="title" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea id="description" name="description" class="form-control"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="deadline">Deadline</label>
                            <input type="date" id="deadline" name="deadline" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="status">Status</label>
                            <select id="status" name="status" class="form-control">
                                <option value="pending">Pending</option>
                                <option value="in progress">In Progress</option>
                                <option value="completed">Completed</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="workSessionStart">Work Session Start</label>
                            <input type="datetime-local" class="form-control" id="workSessionStart" name="workSessionStart">
                        </div>
                        <div class="form-group">
                            <label for="workSessionEnd">Work Session End</label>
                            <input type="datetime-local" class="form-control" id="workSessionEnd" name="workSessionEnd">
                        </div>
                        <button type="submit" class="btn btn-primary">Update Task</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const taskId = new URLSearchParams(window.location.search).get('id');

            fetch(`/api/tasks/${taskId}`)
            .then(response => response.json())
            .then(task => {
                document.getElementById('taskTitle').textContent = task.title;
                document.getElementById('taskDescription').textContent = task.description;
                document.getElementById('taskDeadline').textContent = `Deadline: ${new Date(task.deadline).toLocaleDateString()}`;
                if(task.assignee && task.assignee.username) {
                    document.getElementById('taskAssignee').textContent = `Assignee: ${task.assignee.username}`;
                } else {
                    document.getElementById('taskAssignee').textContent = "Assignee: Unassigned";
                }
                // Calculate and display time spent on the task
                let totalHours = 0;
                if (task.workSessions && task.workSessions.length > 0) {
                    task.workSessions.forEach(session => {
                        const start = new Date(session.start);
                        const end = new Date(session.end);
                        totalHours += (end - start) / (1000 * 60 * 60); // Convert milliseconds to hours
                    });
                }
                document.getElementById('timeSpent').textContent = totalHours.toFixed(2);
            })
            .catch(error => {
                console.error('Error fetching task details:', error);
                alert('Failed to fetch task details.');
            });

            document.getElementById('deleteTaskButton').addEventListener('click', function() {
                if(confirm('Are you sure you want to delete this task?')) {
                    fetch(`/api/tasks/${taskId}`, {
                        method: 'DELETE'
                    })
                    .then(() => {
                        alert('Task deleted successfully');
                        window.location.href = '/tasks'; // Redirect to tasks list
                    })
                    .catch(error => {
                        console.error('Error deleting task:', error);
                        alert('Failed to delete task.');
                    });
                }
            });

            document.getElementById('updateTaskForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const updatedTask = {
                    title: document.getElementById('title').value,
                    description: document.getElementById('description').value,
                    deadline: document.getElementById('deadline').value,
                    status: document.getElementById('status').value,
                    workSessionStart: document.getElementById('workSessionStart').value,
                    workSessionEnd: document.getElementById('workSessionEnd').value
                };

                fetch(`/api/tasks/${taskId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedTask)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok.');
                    }
                    return response.json();
                })
                .then(() => {
                    alert('Task updated successfully');
                    $('#updateTaskModal').modal('hide');
                    location.reload(); // Reload the page to update task details
                })
                .catch(error => {
                    console.error('Error updating task:', error);
                    alert('Failed to update task.');
                });
            });
        });
    </script>
</body>
</html>